plugins {
	id "org.jetbrains.kotlin.jvm" version "1.9.25"
	id "org.jetbrains.kotlin.plugin.spring" version "1.9.25"
	id "org.springframework.boot" version "3.5.0"
	id "io.spring.dependency-management" version "1.1.7"
	id "org.jetbrains.kotlin.plugin.jpa" version "1.9.25"
}

group = "com.mss"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	gradlePluginPortal()
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
	implementation "org.flywaydb:flyway-core:9.5.1"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	implementation("org.postgresql:postgresql:42.7.3")
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0")
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "org.postgresql:postgresql"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll "-Xjsr305=strict"
	}
}

allOpen {
	annotation "jakarta.persistence.Entity"
	annotation "jakarta.persistence.MappedSuperclass"
	annotation "jakarta.persistence.Embeddable"
}

tasks.named("test") {
	useJUnitPlatform()
}
